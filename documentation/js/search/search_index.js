var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiException.html",[0,0.059,1,2.119]],["body/classes/ApiException.html",[0,0.053,1,2.918,2,0.846,3,0.225,4,0.193,5,0.193,6,1.414,7,2.227,8,2.683,9,0.293,10,1.912,11,2.718,12,4.754,13,4.588,14,0.799,15,3.796,16,3.796,17,2.227,18,1.718,19,1.835,20,3.914,21,3.399,22,2.683,23,1.1,24,2.705,25,0.621,26,0.039,27,0.561,28,0.891,29,0.621,30,1.718,31,1.718,32,0.799,33,1.718,34,0.569,35,0.461,36,1.718,37,1.065,38,1.718,39,0.354,40,1.718,41,2.705,42,2.705,43,0.978,44,1.214,45,1.648,46,1.718,47,1.718,48,1.718,49,2.227,50,1.214,51,2.227,52,1.718,53,1.414,54,1.065,55,0.846,56,1.414,57,1.214,58,2.683,59,1.414,60,1.414,61,2.365,62,1.414,63,0.946,64,1.414,65,2.227,66,1.414,67,1.414,68,1.414,69,2.705,70,2.705,71,1.718,72,1.718,73,2.705,74,2.705,75,2.227,76,2.227,77,1.718,78,0.017,79,0.017]],["title/controllers/AppController.html",[80,1.329,81,1.858]],["body/controllers/AppController.html",[0,0.044,3,0.292,4,0.252,5,0.252,9,0.381,11,1.385,14,0.976,17,1.839,19,1.944,23,1.159,26,0.039,32,1.285,34,0.496,35,0.381,39,0.292,43,1.572,78,0.021,79,0.021,80,0.99,81,2.05,82,0.99,83,1.839,84,1.579,85,1.839,86,2.395,87,3.582,88,4.644,89,3.283,90,2.697,91,3.307,92,2.234,93,2.234,94,3.307,95,2.234,96,3.307,97,2.234,98,1.839,99,2.234,100,2.479,101,1.839,102,2.234,103,1.839,104,2.337,105,2.234,106,2.234,107,2.234,108,2.234,109,2.234,110,1.839,111,2.234,112,1.839,113,2.234]],["title/modules/AppModule.html",[114,1.477,115,1.858]],["body/modules/AppModule.html",[0,0.056,3,0.371,4,0.319,5,0.319,26,0.038,34,0.764,35,0.483,39,0.371,78,0.025,79,0.025,81,2.787,82,1.738,100,2.595,101,2.334,114,1.932,115,3.506,116,1.397,117,1.932,118,2.334,119,2.334,120,2.334,121,2.9,122,2.9,123,2.431,124,1.757,125,1.757,126,2.835,127,2.772,128,3.922,129,2.835,130,2.835,131,2.835]],["title/injectables/AppService.html",[100,1.477,132,0.645]],["body/injectables/AppService.html",[0,0.066,3,0.437,4,0.376,5,0.376,9,0.569,14,1.294,19,2.074,23,1.167,26,0.038,32,1.294,34,0.501,35,0.569,39,0.437,43,1.583,78,0.028,79,0.028,86,2.856,87,4.271,100,2.158,132,0.942,133,1.481,134,2.751,135,3.341,136,3.341,137,3.341,138,3.341]],["title/classes/CreateUserDto.html",[0,0.059,139,1.477]],["body/classes/CreateUserDto.html",[0,0.081,2,1.476,3,0.392,4,0.337,5,0.337,9,0.51,10,2.879,19,1.629,23,1.085,26,0.039,27,1.512,28,1.085,34,0.611,39,0.392,78,0.026,79,0.026,90,2.525,110,2.467,139,2.007,140,3.81,141,2.118,142,4.628,143,3.353,144,4.073,145,2.996,146,2.996,147,2.996,148,2.996,149,4.628,150,2.118,151,4.073,152,4.073,153,2.467,154,4.073,155,2.467]],["title/classes/HttpExceptionFilter.html",[0,0.059,54,1.858]],["body/classes/HttpExceptionFilter.html",[0,0.045,2,1.122,3,0.298,4,0.256,5,0.256,8,3.461,9,0.388,14,0.991,21,1.875,22,1.61,23,0.607,25,0.823,26,0.039,27,0.744,28,0.607,29,0.823,32,0.673,34,0.342,35,0.388,37,2.079,39,0.298,45,1.122,49,3.616,50,2.814,51,3.278,53,1.875,54,2.468,55,1.653,56,2.762,57,2.814,58,3.461,59,1.875,60,1.875,61,2.371,62,1.875,63,1.254,64,1.875,65,3.278,66,1.875,67,3.278,68,1.875,75,1.875,76,1.875,78,0.022,79,0.022,155,2.762,156,2.762,157,1.875,158,2.278,159,1.875,160,2.278,161,2.278,162,3.354,163,2.278,164,2.278,165,2.278,166,2.278,167,2.278,168,2.278,169,2.278,170,2.278,171,2.278]],["title/injectables/LoggerMiddleware.html",[132,0.645,172,2.119]],["body/injectables/LoggerMiddleware.html",[0,0.059,3,0.39,4,0.336,5,0.336,9,0.508,14,1.199,23,0.794,25,1.077,26,0.038,27,0.974,28,0.794,29,1.077,32,0.88,34,0.609,35,0.508,39,0.39,55,1.469,61,3.502,63,2.728,78,0.026,79,0.026,132,0.873,133,1.321,159,2.454,172,2.869,173,2.454,174,4.059,175,4.059,176,4.615,177,3.664,178,4.955,179,2.981,180,2.454,181,4.059,182,2.107,183,2.981,184,2.981,185,2.981]],["title/controllers/PostsController.html",[80,1.329,186,1.858]],["body/controllers/PostsController.html",[0,0.052,3,0.342,4,0.295,5,0.295,9,0.446,11,1.623,14,1.095,19,1.722,23,0.697,25,0.946,26,0.039,27,0.855,28,0.697,29,0.946,32,0.773,34,0.703,35,0.446,39,0.342,43,0.946,44,1.85,45,1.29,63,2.907,78,0.024,79,0.024,80,1.16,82,1.16,84,1.85,90,1.623,104,1.85,180,3.053,182,1.85,186,2.299,187,2.155,188,2.617,189,3.708,190,2.617,191,4.945,192,3.708,193,2.617,194,3.708,195,2.617,196,2.617,197,1.623,198,2.617,199,2.122,200,2.155,201,2.617,202,2.617,203,3.708,204,2.617,205,2.617,206,2.617,207,2.617,208,2.617,209,2.617,210,2.617,211,2.617]],["title/modules/PostsModule.html",[114,1.477,121,1.65]],["body/modules/PostsModule.html",[0,0.065,3,0.432,4,0.372,5,0.372,26,0.038,34,0.729,35,0.563,39,0.432,78,0.028,79,0.028,82,1.927,114,2.142,116,1.627,117,2.142,121,3.033,123,2.695,124,2.048,125,2.048,127,3.073,186,3.013,199,2.714,200,2.719,212,2.719,213,2.719,214,3.303,215,3.303]],["title/injectables/PostsService.html",[132,0.645,199,1.477]],["body/injectables/PostsService.html",[0,0.082,3,0.54,4,0.465,5,0.465,26,0.037,34,0.619,35,0.703,39,0.54,78,0.032,79,0.032,132,1.076,133,1.828,199,2.466,216,3.397]],["title/guards/RolesGuard.html",[197,1.858,217,2.119]],["body/guards/RolesGuard.html",[0,0.046,3,0.305,4,0.263,5,0.263,8,2.854,9,0.398,10,1.649,11,2.116,14,1.008,19,0.933,22,1.649,23,0.622,25,0.843,26,0.04,27,0.762,28,0.622,29,0.843,32,0.689,34,0.512,35,0.398,37,1.446,39,0.305,43,1.234,44,2.413,45,1.682,50,1.649,55,1.149,58,2.413,63,1.284,78,0.022,79,0.022,132,0.734,197,2.116,218,2.333,219,1.921,220,3.414,221,4.727,222,2.333,223,3.657,224,2.333,225,2.81,226,3.414,227,3.414,228,3.323,229,2.333,230,1.649,231,2.333,232,1.649,233,2.333,234,4.037,235,2.333,236,2.333,237,2.81,238,2.333,239,3.414]],["title/injectables/TransformInterceptor.html",[132,0.645,240,2.119]],["body/injectables/TransformInterceptor.html",[0,0.058,3,0.382,4,0.329,5,0.329,9,0.498,14,1.182,23,0.778,25,1.055,26,0.039,27,0.954,28,0.778,29,1.055,32,0.862,34,0.601,35,0.498,39,0.382,43,1.447,55,1.439,78,0.026,79,0.026,132,0.861,133,1.294,177,3.228,223,4.045,225,2.404,228,3.76,230,2.064,232,2.064,240,2.829,241,2.404,242,4.003,243,4.003,244,4.913,245,2.921,246,4.003,247,2.921,248,2.921,249,2.921,250,2.921,251,2.921,252,2.404,253,2.921]],["title/classes/UpdateUserDto.html",[0,0.059,254,1.65]],["body/classes/UpdateUserDto.html",[0,0.077,2,1.923,3,0.511,4,0.44,5,0.44,7,3.214,26,0.038,34,0.726,39,0.511,78,0.031,79,0.031,86,2.149,139,1.923,141,2.759,150,2.759,254,2.663,255,3.214,256,3.904,257,2.759,258,3.904]],["title/classes/User.html",[0,0.059,259,1.858]],["body/classes/User.html",[0,0.085,2,2.123,3,0.564,4,0.485,5,0.485,26,0.035,39,0.564,78,0.033,79,0.033,259,3.185,260,3.548]],["title/controllers/UsersController.html",[80,1.329,261,1.858]],["body/controllers/UsersController.html",[0,0.038,3,0.248,4,0.214,5,0.214,9,0.323,14,0.863,19,2.016,23,1.152,25,1.447,26,0.039,27,1.309,28,1.067,29,1.447,32,1.277,34,0.601,35,0.323,39,0.248,43,1.563,78,0.019,79,0.019,80,0.841,82,0.841,84,1.342,86,1.609,89,2.066,90,2.681,98,2.935,103,1.562,104,1.342,139,2.251,177,1.342,254,2.705,257,2.066,261,1.812,262,1.562,263,1.562,264,3.297,265,2.407,266,2.407,267,1.562,268,1.898,269,1.898,270,1.562,271,2.923,272,1.898,273,3.761,274,1.562,275,2.923,276,1.898,277,1.562,278,2.923,279,1.898,280,1.898,281,1.898,282,1.898,283,1.898,284,2.923,285,1.898,286,1.898,287,1.898,288,1.757,289,1.562,290,1.562,291,1.562,292,1.898,293,1.898,294,1.898,295,1.898,296,1.898,297,1.898,298,1.898,299,1.898,300,1.898,301,1.898]],["title/modules/UsersModule.html",[114,1.477,122,1.65]],["body/modules/UsersModule.html",[0,0.065,3,0.432,4,0.372,5,0.372,26,0.038,34,0.729,35,0.563,39,0.432,78,0.028,79,0.028,82,1.927,114,2.142,116,1.627,117,2.142,122,3.033,123,2.695,124,2.048,125,2.048,127,3.073,261,3.013,288,2.714,289,2.719,302,2.719,303,2.719,304,3.303,305,3.303]],["title/injectables/UsersService.html",[132,0.645,288,1.477]],["body/injectables/UsersService.html",[0,0.041,3,0.273,4,0.235,5,0.235,9,0.356,14,0.929,19,1.805,23,1.203,25,1.521,26,0.038,27,1.375,28,1.121,29,1.521,32,1.453,34,0.567,35,0.356,39,0.273,43,1.631,45,1.029,78,0.02,79,0.02,86,1.731,89,2.223,132,0.677,133,0.926,139,2.224,143,4.266,254,2.709,257,2.223,259,2.609,263,1.72,264,3.465,265,2.589,266,2.589,267,2.589,270,2.589,273,3.905,274,2.589,277,2.589,288,1.55,290,1.72,291,1.72,306,1.72,307,2.089,308,2.089,309,2.089,310,2.089,311,2.089,312,4.514,313,2.089,314,2.089,315,2.089]],["title/injectables/ValidationPipe.html",[132,0.645,316,2.119]],["body/injectables/ValidationPipe.html",[0,0.065,3,0.432,4,0.372,5,0.372,9,0.563,14,1.284,23,0.88,25,1.194,26,0.038,27,1.079,28,0.88,29,1.194,32,0.975,34,0.496,35,0.563,39,0.432,43,1.194,55,1.627,78,0.028,79,0.028,132,0.935,133,1.464,232,2.335,316,3.073,317,2.719,318,4.348,319,4.348,320,4.001,321,5.164,322,3.303,323,3.073,324,4.348,325,3.303]],["title/coverage.html",[326,2.88]],["body/coverage.html",[0,0.095,1,1.718,5,0.274,6,2.001,26,0.038,28,0.648,45,1.198,54,1.507,78,0.023,79,0.023,80,1.832,81,1.507,83,2.001,100,1.198,132,1.078,134,2.001,139,1.198,140,2.001,141,2.486,156,2.001,157,2.001,172,1.718,173,2.001,186,1.507,187,2.001,197,1.507,199,1.198,216,2.001,217,1.718,219,2.001,240,1.718,241,2.001,252,4.781,254,1.338,255,2.001,259,1.507,260,2.001,261,1.507,262,2.001,288,1.198,306,2.001,316,1.718,317,2.001,326,1.718,327,2.431,328,2.431,329,2.431,330,2.431,331,4.133,332,2.001,333,2.431,334,2.001,335,4.806,336,4.806,337,4.133,338,2.001,339,2.431,340,2.001,341,2.431,342,2.431]],["title/dependencies.html",[117,1.774,343,2.512]],["body/dependencies.html",[0,0.088,26,0.039,35,0.579,78,0.029,79,0.029,117,1.675,150,2.403,153,2.799,182,3.132,230,2.403,320,2.799,344,4.929,345,3.4,346,3.4,347,3.4,348,3.4,349,3.4,350,3.4,351,3.4,352,3.4,353,3.4,354,3.4,355,3.4,356,3.4,357,3.4,358,3.4,359,3.4,360,3.4,361,3.4,362,3.4,363,3.4,364,3.4]],["title/miscellaneous/enumerations.html",[365,1.238,366,2.965]],["body/miscellaneous/enumerations.html",[9,0.698,20,4.102,26,0.035,37,3.089,78,0.032,79,0.032,323,2.896,365,2.018,366,3.373,367,4.097,368,4.983,369,4.097,370,4.097,371,4.097,372,4.097,373,4.097]],["title/miscellaneous/functions.html",[365,1.238,374,2.965]],["body/miscellaneous/functions.html",[9,0.745,26,0.034,78,0.034,79,0.034,338,3.602,340,4.548,365,2.155,374,3.602,375,4.375]],["title/index.html",[9,0.428,376,2.512,377,2.512]],["body/index.html",[4,0.292,26,0.038,78,0.024,79,0.024,85,2.136,326,1.834,378,2.594,379,2.594,380,3.685,381,2.594,382,2.594,383,2.594,384,2.594,385,2.594,386,2.594,387,2.594,388,4.286,389,2.594,390,2.594,391,2.594,392,2.594,393,5.267,394,2.594,395,2.594,396,5.12,397,2.594,398,2.594,399,3.685,400,2.594,401,2.594,402,2.594,403,2.594,404,3.685,405,3.685,406,2.594,407,2.594,408,2.594,409,3.034,410,3.685,411,3.685,412,2.594,413,2.594,414,2.594,415,2.594,416,2.594,417,2.594,418,2.594,419,2.594,420,2.594,421,2.594,422,2.594,423,2.594,424,2.594,425,2.594,426,2.594,427,2.594,428,2.594,429,2.594,430,2.594,431,2.594,432,2.594,433,2.594,434,2.594,435,2.594,436,2.594]],["title/modules.html",[116,2.008]],["body/modules.html",[26,0.032,78,0.032,79,0.032,115,2.558,116,2.033,121,2.271,122,2.271,409,4.435,437,5.387,438,5.387,439,5.387]],["title/overview.html",[440,3.355]],["body/overview.html",[2,1.582,26,0.036,78,0.028,79,0.028,82,1.423,100,2.362,112,3.514,115,3.512,116,1.582,117,2.103,118,2.644,119,2.644,120,2.644,121,2.927,122,2.927,123,2.646,124,1.991,125,1.991,133,1.423,199,2.362,212,2.644,213,2.644,217,2.27,288,2.362,302,2.644,303,2.644,440,2.644,441,3.212,442,3.212,443,3.212]],["title/miscellaneous/variables.html",[365,1.238,444,2.965]],["body/miscellaneous/variables.html",[9,0.586,26,0.039,28,1.19,57,2.432,78,0.029,79,0.029,237,2.832,323,2.432,332,2.832,334,3.676,365,1.695,444,2.832,445,3.44,446,3.44,447,3.44,448,3.44,449,3.44,450,3.44,451,3.44,452,3.44,453,3.44,454,3.44,455,3.44,456,3.44,457,3.44,458,4.465,459,3.44,460,3.44,461,3.44,462,3.44,463,3.44,464,3.44,465,3.44]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":252,"title":{},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["0.1.13",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["0.2.43",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":443,"title":{},"body":{"overview.html":{}}}],["10001",{"_index":373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{}}}],["2.3.3",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["2})@isint",{"_index":145,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"overview.html":{}}}],["3.0.2",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":442,"title":{},"body":{"overview.html":{}}}],["5.1.4",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":163,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["6",{"_index":441,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":312,"title":{},"body":{"injectables/UsersService.html":{}}}],["adds",{"_index":313,"title":{},"body":{"injectables/UsersService.html":{}}}],["age",{"_index":142,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":417,"title":{},"body":{"index.html":{}}}],["api",{"_index":36,"title":{},"body":{"classes/ApiException.html":{}}}],["apierrorcode",{"_index":20,"title":{},"body":{"classes/ApiException.html":{},"miscellaneous/enumerations.html":{}}}],["apierrorcode.user_id_invalid",{"_index":47,"title":{},"body":{"classes/ApiException.html":{}}}],["apiexception",{"_index":1,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["apiexception('用户id",{"_index":46,"title":{},"body":{"classes/ApiException.html":{}}}],["apiproperty",{"_index":149,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({example",{"_index":144,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["app",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app.controller",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":81,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":386,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":115,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":100,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":321,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":49,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":427,"title":{},"body":{"index.html":{}}}],["await",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backers",{"_index":418,"title":{},"body":{"index.html":{}}}],["body",{"_index":284,"title":{},"body":{"controllers/UsersController.html":{}}}],["boolean",{"_index":226,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":439,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":437,"title":{},"body":{"modules.html":{}}}],["building",{"_index":381,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":244,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":221,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":222,"title":{},"body":{"guards/RolesGuard.html":{}}}],["catch",{"_index":50,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["catch(exception",{"_index":56,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":53,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["class",{"_index":0,"title":{"classes/ApiException.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiException.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":165,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cluster_appmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":212,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_providers",{"_index":213,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":302,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":303,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":251,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["code.enum",{"_index":38,"title":{},"body":{"classes/ApiException.html":{}}}],["code.enum.ts",{"_index":368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log",{"_index":232,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["console.log('request",{"_index":183,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log('response",{"_index":184,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(ip",{"_index":210,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(request.cookies",{"_index":209,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":58,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{}}}],["constructor(appservice",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(errormessage",{"_index":18,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(postservice",{"_index":204,"title":{},"body":{"controllers/PostsController.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["context",{"_index":225,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":233,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtorpc().getdata().headers['token",{"_index":235,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":80,"title":{"controllers/AppController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('app",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["controller('posts",{"_index":202,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":292,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":326,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":293,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":267,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createconnection",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":139,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":62,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["data",{"_index":250,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["database",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_connection",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseproviders",{"_index":334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":73,"title":{},"body":{"classes/ApiException.html":{}}}],["date().toisostring",{"_index":168,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date().tolocaledatestring",{"_index":74,"title":{},"body":{"classes/ApiException.html":{}}}],["decorators",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":287,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":275,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":117,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":387,"title":{},"body":{"index.html":{}}}],["development",{"_index":395,"title":{},"body":{"index.html":{}}}],["disable",{"_index":281,"title":{},"body":{"controllers/UsersController.html":{}}}],["documentation",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":325,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["dto/create",{"_index":290,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":291,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":406,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":382,"title":{},"body":{"index.html":{}}}],["eggweb",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ending",{"_index":185,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["entities",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity{.ts,.js",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":366,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":37,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":12,"title":{},"body":{"classes/ApiException.html":{}}}],["errormessage",{"_index":13,"title":{},"body":{"classes/ApiException.html":{}}}],["eslint",{"_index":280,"title":{},"body":{"controllers/UsersController.html":{}}}],["example",{"_index":154,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["exception",{"_index":67,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":157,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":158,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrorcode",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.geterrormessage",{"_index":72,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.getstatus",{"_index":66,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":162,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":51,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["exceptions/api.exception",{"_index":52,"title":{},"body":{"classes/ApiException.html":{}}}],["executioncontext",{"_index":223,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["express",{"_index":182,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/ApiException.html":{},"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["findall",{"_index":264,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":265,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":296,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":270,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":380,"title":{},"body":{"index.html":{}}}],["function",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":374,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":271,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('query",{"_index":192,"title":{},"body":{"controllers/PostsController.html":{}}}],["get('user_",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["geterrorcode",{"_index":15,"title":{},"body":{"classes/ApiException.html":{}}}],["geterrormessage",{"_index":16,"title":{},"body":{"classes/ApiException.html":{}}}],["gethello",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpost",{"_index":189,"title":{},"body":{"controllers/PostsController.html":{}}}],["getpost(@query",{"_index":206,"title":{},"body":{"controllers/PostsController.html":{}}}],["getpost(queries",{"_index":190,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":376,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["grow",{"_index":414,"title":{},"body":{"index.html":{}}}],["guard",{"_index":217,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":218,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hello",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":424,"title":{},"body":{"index.html":{}}}],["host",{"_index":57,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":60,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["http://localhost:9080/app/user_xxx",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["httpexception",{"_index":8,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["httpexception('forbidden",{"_index":207,"title":{},"body":{"controllers/PostsController.html":{}}}],["httpexceptionfilter",{"_index":54,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":431,"title":{},"body":{"index.html":{}}}],["https://www.jianshu.com/p/ebd80c9c6db1",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["httpstatus",{"_index":22,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["httpstatus.bad_request",{"_index":48,"title":{},"body":{"classes/ApiException.html":{}}}],["httpstatus.forbidden",{"_index":208,"title":{},"body":{"controllers/PostsController.html":{}}}],["httpstatus.internal_server_error",{"_index":161,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus.unauthorized",{"_index":239,"title":{},"body":{"guards/RolesGuard.html":{}}}],["id",{"_index":273,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":55,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["injectable",{"_index":132,"title":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PostsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PostsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["installation",{"_index":392,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":394,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["intercept",{"_index":242,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":243,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["ip",{"_index":191,"title":{},"body":{"controllers/PostsController.html":{}}}],["isint",{"_index":151,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":152,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring({message",{"_index":147,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":420,"title":{},"body":{"index.html":{}}}],["json",{"_index":70,"title":{},"body":{"classes/ApiException.html":{}}}],["json.stringify(msglog",{"_index":170,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["kamil",{"_index":428,"title":{},"body":{"index.html":{}}}],["license",{"_index":436,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":411,"title":{},"body":{"index.html":{}}}],["line",{"_index":282,"title":{},"body":{"controllers/UsersController.html":{}}}],["localhost",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":160,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["logger.error",{"_index":169,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["loggermiddleware",{"_index":172,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["map",{"_index":247,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":249,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":79,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":155,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":320,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["miscellaneous",{"_index":365,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":410,"title":{},"body":{"index.html":{}}}],["mode",{"_index":399,"title":{},"body":{"index.html":{}}}],["module",{"_index":114,"title":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":116,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":423,"title":{},"body":{"index.html":{}}}],["msg",{"_index":253,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["msglog",{"_index":166,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["mysql",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":429,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/ApiException.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["nest",{"_index":388,"title":{},"body":{"index.html":{}}}],["nest.js",{"_index":435,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":433,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":246,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":35,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":150,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":181,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["new",{"_index":45,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":177,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["next.handle().pipe",{"_index":248,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["nextfunction",{"_index":178,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":379,"title":{},"body":{"index.html":{}}}],["npm",{"_index":393,"title":{},"body":{"index.html":{}}}],["number",{"_index":143,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["observable",{"_index":228,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["open",{"_index":412,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["out",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":440,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":343,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":286,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["partialtype",{"_index":256,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":258,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":285,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":278,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":75,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["pipetransform",{"_index":324,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":421,"title":{},"body":{"index.html":{}}}],["port",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["post('list",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["posts",{"_index":188,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":215,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts.service",{"_index":200,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":186,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postservice",{"_index":203,"title":{},"body":{"controllers/PostsController.html":{}}}],["postsmodule",{"_index":121,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":199,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["post请求，http://localhost:9080/app/list",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["prefix",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["prettier/prettier",{"_index":283,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":11,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{}}}],["production",{"_index":401,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":378,"title":{},"body":{"index.html":{}}}],["project",{"_index":413,"title":{},"body":{"index.html":{}}}],["promise",{"_index":227,"title":{},"body":{"guards/RolesGuard.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/ApiException.html":{},"classes/CreateUserDto.html":{},"guards/RolesGuard.html":{}}}],["provide",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["put",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["put('list/:id",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["put请求，http://localhost:9080/app/list/xxxx",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["queries",{"_index":194,"title":{},"body":{"controllers/PostsController.html":{}}}],["queries.name",{"_index":211,"title":{},"body":{"controllers/PostsController.html":{}}}],["query",{"_index":195,"title":{},"body":{"controllers/PostsController.html":{}}}],["quicklystart",{"_index":434,"title":{},"body":{"index.html":{}}}],["read",{"_index":422,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":266,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":300,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":274,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":315,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":391,"title":{},"body":{"index.html":{}}}],["req",{"_index":180,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{}}}],["request",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{}}}],["request.url",{"_index":76,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["res",{"_index":176,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["response.status(status).json(msglog",{"_index":171,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["results",{"_index":78,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":229,"title":{},"body":{"guards/RolesGuard.html":{}}}],["return",{"_index":43,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":32,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["rimraf",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["rolesguard",{"_index":197,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["root",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":396,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":230,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["scalable",{"_index":383,"title":{},"body":{"index.html":{}}}],["server",{"_index":384,"title":{},"body":{"index.html":{}}}],["service",{"_index":164,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["side",{"_index":385,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":416,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../database.providers.ts",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:26",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:33",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:8",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["src/core/database/database.providers.ts",{"_index":332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/filter/http",{"_index":156,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/guard/roles.guard",{"_index":198,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/core/guard/roles.guard.ts",{"_index":219,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/core/guard/roles.guard.ts:16",{"_index":224,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/core/interceptor/response.interceptor.ts",{"_index":241,"title":{},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/interceptor/response.interceptor.ts:11",{"_index":245,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/middleware/logger.middleware.ts",{"_index":173,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/core/middleware/logger.middleware.ts:7",{"_index":179,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/core/pipe/validation.pipe.ts",{"_index":317,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/core/pipe/validation.pipe.ts:6",{"_index":322,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/exceptions/api",{"_index":369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/exceptions/api.exception.ts",{"_index":6,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/exceptions/api.exception.ts:20",{"_index":31,"title":{},"body":{"classes/ApiException.html":{}}}],["src/exceptions/api.exception.ts:24",{"_index":33,"title":{},"body":{"classes/ApiException.html":{}}}],["src/exceptions/api.exception.ts:6",{"_index":30,"title":{},"body":{"classes/ApiException.html":{}}}],["src/exceptions/api.exception.ts:7",{"_index":24,"title":{},"body":{"classes/ApiException.html":{}}}],["src/main.ts",{"_index":338,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/posts.controller.ts",{"_index":187,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:14",{"_index":193,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":214,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/posts.service.ts",{"_index":216,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":140,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":255,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":260,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":262,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:12",{"_index":268,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:17",{"_index":269,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:22",{"_index":272,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:27",{"_index":279,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":276,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":304,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":306,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":308,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":309,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":311,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":310,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":307,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":397,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":400,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":402,"title":{},"body":{"index.html":{}}}],["started",{"_index":377,"title":{"index.html":{}},"body":{}}],["starter",{"_index":390,"title":{},"body":{"index.html":{}}}],["statements",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["status(status",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["statuscode",{"_index":21,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":425,"title":{},"body":{"index.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["success",{"_index":371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super(errormessage",{"_index":40,"title":{},"body":{"classes/ApiException.html":{}}}],["support",{"_index":409,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":438,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":405,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":408,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":407,"title":{},"body":{"index.html":{}}}],["tests",{"_index":404,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":415,"title":{},"body":{"index.html":{}}}],["this.appservice",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.create",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["this.errorcode",{"_index":42,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errormessage",{"_index":41,"title":{},"body":{"classes/ApiException.html":{}}}],["this.postservice",{"_index":205,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.urllist.includes(request.url",{"_index":236,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.usersservice.create(createuserdto",{"_index":294,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":295,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":297,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":301,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":299,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":44,"title":{},"body":{"classes/ApiException.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{}}}],["timeout",{"_index":370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["timestamp",{"_index":167,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["token",{"_index":234,"title":{},"body":{"guards/RolesGuard.html":{}}}],["touch",{"_index":426,"title":{},"body":{"index.html":{}}}],["transform",{"_index":318,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":319,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["transforminterceptor",{"_index":240,"title":{"injectables/TransformInterceptor.html":{}},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":237,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":238,"title":{},"body":{"guards/RolesGuard.html":{}}}],["twitter",{"_index":432,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/ApiException.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":389,"title":{},"body":{"index.html":{}}}],["ui",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":403,"title":{},"body":{"index.html":{}}}],["update",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":298,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":277,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updates",{"_index":314,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":254,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["urllist",{"_index":220,"title":{},"body":{"guards/RolesGuard.html":{}}}],["use",{"_index":174,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":175,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usefactory",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":196,"title":{},"body":{"controllers/PostsController.html":{}}}],["useguards(rolesguard",{"_index":201,"title":{},"body":{"controllers/PostsController.html":{}}}],["user",{"_index":259,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":257,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":141,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":146,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":148,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user/login",{"_index":231,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user_id_invalid",{"_index":372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["username",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":263,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":305,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":289,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":261,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":122,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":288,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validationpipe",{"_index":316,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":153,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":323,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":444,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":159,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":398,"title":{},"body":{"index.html":{}}}],["website",{"_index":430,"title":{},"body":{"index.html":{}}}],["world",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":419,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/api.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorCode\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorCode\n                            \n                            \n                                getErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorMessage: string, errorCode: ApiErrorCode, statusCode: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/api.exception.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMessage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        ApiErrorCode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiErrorCode\n\n                    \n                \n                    \n                        \n                                Defined in src/exceptions/api.exception.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/exceptions/api.exception.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorCode\n                        \n                    \n                \n            \n            \n                \ngetErrorCode()\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/api.exception.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ApiErrorCode\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/exceptions/api.exception.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiErrorCode } from './api-error-code.enum';\n\n// 自定义拓展错误类型\nexport class ApiException extends HttpException {\n  private errorMessage: string;\n  private errorCode: ApiErrorCode;\n\n  constructor(\n    errorMessage: string,\n    errorCode: ApiErrorCode,\n    statusCode: HttpStatus,\n  ) {\n    super(errorMessage, statusCode);\n\n    this.errorMessage = errorMessage;\n    this.errorCode = errorCode;\n  }\n\n  getErrorCode(): ApiErrorCode {\n    return this.errorCode;\n  }\n\n  getErrorMessage(): string {\n    return this.errorMessage;\n  }\n}\n// 使用\n// throw new ApiException('用户ID无效', ApiErrorCode.USER_ID_INVALID, HttpStatus.BAD_REQUEST);\n\n// 这样还没完，我们的全局过滤器并没有加入识别ApiException的逻辑，现在修改全局过滤器的逻辑：\n/**\n * import { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n\n  catch(exception, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus()\n\n    if (exception instanceof ApiException) {\n\n      response\n        .status(status)\n        .json({\n          errorCode: exception.getErrorCode(),\n          errorMessage: exception.getErrorMessage(),\n          date: new Date().toLocaleDateString(),\n          path: request.url,\n        });\n\n    } else {\n\n      response\n        .status(status)\n        .json({\n          statusCode: status,\n          date: new Date().toLocaleDateString(),\n          path: request.url,\n        });\n    }\n  }\n\n}\n */\n\n// https://www.jianshu.com/p/ebd80c9c6db1\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                app\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getHello\n                            \n                            \n                                getUser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('list')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user_*')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('list/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Put } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller('app')\nexport class AppController {\n  // 通过 constructor 注入依赖关系\n  constructor(private readonly appService: AppService) {}\n  // private readonly appService: AppService;\n  // constructor(appService: AppService) {\n  //   this.appService = appService;\n  // }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n  // 可以匹配到 post请求，http://localhost:9080/app/list\n  @Post('list')\n  create(): string {\n    return this.appService.create();\n  }\n\n  // 2.通配符路径(?+* 三种通配符 )\n  // 可以匹配到 get请求, http://localhost:9080/app/user_xxx\n  @Get('user_*')\n  getUser() {\n    return 'getUser';\n  }\n\n  // 3.带参数路径\n  // 可以匹配到put请求，http://localhost:9080/app/list/xxxx\n  @Put('list/:id')\n  update() {\n    return 'update';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPostsModule\n\nPostsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PostsModule } from './posts/posts.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [PostsModule, UsersModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n  create(): string {\n    return '新增';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '小白'})@IsString({message: '必须是字符串'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: '小白' })\n  @IsString({ message: '必须是字符串' })\n  name: string;\n\n  @ApiProperty({ example: 2 })\n  @IsInt()\n  age: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filter/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/filter/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\n\n@Catch(HttpException)\n// 可以继承HttpException拓展错误类型\n// 定义返回错误的统一格式\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    // exception当前正在处理的错误对象\n    const ctx = host.switchToHttp(); // 获取请求上下文\n    const response = ctx.getResponse(); // 获取请求上下文中的 response对象\n    const request = ctx.getRequest();\n    // 获取异常状态码\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n    // 设置错误信息\n    const message = exception.message\n      ? exception.message\n      : `${status >= 500 ? 'Service Error' : 'Client Error'}`;\n\n    const msgLog = {\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message,\n    };\n\n    Logger.error('错误消息', JSON.stringify(msgLog), 'HttpExceptionFilter');\n    // 设置返回的状态码， 请求头，发送错误信息\n    response.status(status).json(msgLog);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middleware/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middleware/logger.middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n// 中间件编写\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('Request...');\n    // 调用next()进入下一个中间件或者路由\n    next();\n    console.log('Response ending');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPost\n                        \n                    \n                \n            \n            \n                \ngetPost(queries, request: Request, ip: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('query')\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queries\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ip\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Ip, Query, Req, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/core/guard/roles.guard';\nimport { PostsService } from './posts.service';\nimport { Request } from 'express';\n\n@UseGuards(RolesGuard)\n@Controller('posts')\nexport class PostsController {\n  private readonly postService: PostsService;\n  constructor(postService: PostsService) {\n    this.postService = postService;\n  }\n  @Get('query')\n  getPost(@Query() queries, @Req() request: Request, @Ip() ip: string) {\n    // throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n    console.log(request.cookies);\n    console.log(ip);\n    return queries.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nPostsService\n\nPostsService\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './posts.service';\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PostsService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/core/guard/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                urlList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/core/guard/roles.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Observable, retry } from 'rxjs';\n\n// 守卫，主要职责是用来鉴权\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  // 白名单, 直接放行\n  private urlList: string[] = ['user/login'];\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    console.log('进入全局权限守卫...');\n    // 获取请求对象\n    const request = context.switchToHttp().getRequest();\n    // 获取请求头中的token\n    const token = context.switchToRpc().getData().headers['token'];\n    // 白名单直接放行\n    if (this.urlList.includes(request.url)) {\n      return true;\n    }\n    if (token) {\n      try {\n        // 这里可以添加验证逻辑\n        return true;\n      } catch (error) {\n        throw new HttpException(\n          '没有访问权限，请先登录',\n          HttpStatus.UNAUTHORIZED,\n        );\n      }\n    } else {\n      throw new HttpException(\n        '没有访问权限，请先登录',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptor/response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/interceptor/response.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('进入全局拦截器...');\n    return next.handle().pipe(\n      map((data) => {\n        return {\n          data,\n          code: 0,\n          msg: '请求成功',\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // eslint-disable-next-line prettier/prettier\nimport { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/pipe/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/core/pipe/validation.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\n\n// 全局dto验证管道,主要职责对控制器的参数验证和转换\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    console.log('');\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/filter/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/guard/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/interceptor/response.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/pipe/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/api.exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            mysql2 : ^2.3.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : 5.1.4\n        \n            typeorm : ^0.2.43\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorCode   (src/.../api-error-code.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/exceptions/api-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorCode\n                    \n                \n                        \n                            \n                                 TIMEOUT\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                 USER_ID_INVALID\n                            \n                        \n                        \n                            \n                                Value : 10001\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\nQuicklyStart - 学完这篇 Nest.js 实战，还没入门的来锤我\n\n-参考资料 -一例看懂中间件、守卫、管道、异常过滤器、拦截器\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPostsModule\n\nPostsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: async () =>\n      await createConnection({\n        type: 'mysql',\n        host: 'localhost',\n        port: 3306,\n        username: 'root',\n        password: 'root',\n        database: 'eggweb',\n        entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n        synchronize: true,\n      }),\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
